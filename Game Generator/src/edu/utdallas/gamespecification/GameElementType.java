//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB)
//Reference
//Implementation, v2.2.4-2
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a>
// Any modifications to this file will be lost upon recompilation of the
//source schema.
// Generated on: 2014.04.25 at 07:45:04 PM CDT
//


package edu.utdallas.gamespecification;

import java.util.ArrayList;
import java.util.List;

import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.bind.annotation.XmlType;

import edu.utdallas.gamegeneratorcollection.ComponentCreation.GameObject;
/**
 * Contains information common to most game elements.
 * @author Sean
 *
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "GameElementType", propOrder = {
    "name",
    "location",
    "size",
    "colors",
    "text",
    "animationEffect",
    "soundEffect",
    "behavior",
    "reward"
})
@XmlSeeAlso({
    Prop.class,
    Character.class
})
public class GameElementType {

    /**
     * The element name. If there is a link to an image, it will
     * be stored here.
     */
    @XmlElement(name = "Name", required = true)
    private String name;
    /**
     * The location of the element.
     */
    @XmlElement(name = "Location", required = true)
    private Location location;
    /**
     * The Size of the element.
     */
    @XmlElement(name = "Size", required = true)
    private Size size;
    /**
     * The text associated with the element (button label,
     * words in an infobox, etc). This member also contains
     * the font and font size data for the item.
     */
    @XmlElement(name = "Color")
    private ElementColor colors;
    /**
     * The animation effect associated with the element.
     */
    @XmlElement(name = "Text")
    private Text text;
    /**
     * The animation effect associated with the element.
     */
    @XmlElement(name = "AnimationEffect")
    private AnimationEffectType animationEffect;
    /**
     * The sound effect associated with the element.
     */
    @XmlElement(name = "SoundEffect")
    private String soundEffect;

    /**
     * Holds any rewards associated with the element.
     */
    @XmlElement(name = "Behaviors", required = true)
    private List<Behavior> behaviors;
    /**
     * Holds any rewards associated with the element.
     */
    @XmlElement(name = "Rewards", required = true)
    private Reward rewards;


    /**
     * Default constructor.
     */
    public GameElementType() {

    }

    /**
     * Converts a GameObject type to the new
     * GameElementType.
     * @param rawObject
     * {@link GameObject}
     *
     */
    public GameElementType(final GameObject rawObject) {

        this.setLocation(new Location(rawObject.getX(), rawObject.getY()));
        this.setSize(new Size(rawObject.getWidth(), rawObject.getHeight()));
        this.setName(rawObject.getPathToAsset());
        this.setText(new Text(rawObject.getText()));

    }

    /**
     *
     * @return
     * {@link String}
     */
    public final String getName() {
        return name;
    }

    /**
     *
     * @param value
     * {@link String}
     */
    public final void setName(final String value) {
        this.name = value;
    }

    /**
     *
     * @return
     * {@link Location}
     */
    public final Location getLocation() {
        return location;
    }

    /**
     *
     * @param locValue
     * {@link Location}
     */
    public final void setLocation(final Location locValue) {
        this.location = locValue;
    }

    /**
     *
     * @return
     * {@link Size}
     */
    public final Size getSize() {
        return size;
    }

    /**
     *
     * @param sizeVal
     * {@link Size}
     */
    public final void setSize(final Size sizeVal) {
        this.size = sizeVal;
    }

    /**
     *
     * @return
     * {@link Text}
     */
    public final Text getText() {
        return text;
    }

    /**
     *
     * @param textVal
     * {@link Text}
     */
    public final void setText(final Text textVal) {
        this.text = textVal;
    }

    /**
     * Gets the value of the animationEffect property.
     *
     * @return
     *     possible object is
     *     {@link AnimationEffectType }
     *
     */
    public final AnimationEffectType getAnimationEffect() {
        return animationEffect;
    }

    /**
     * Sets the value of the animationEffect property.
     *
     * @param value
     *     allowed object is
     *     {@link AnimationEffectType }
     *
     */
    public final void setAnimationEffect(final AnimationEffectType value) {
        this.animationEffect = value;
    }

    /**
     * Gets the value of the soundEffect property.
     *
     * @return
     *     possible object is
     *     {@link String }
     *
     */
    public final String getSoundEffect() {
        return soundEffect;
    }

    /**
     * Sets the value of the soundEffect property.
     *
     * @param value
     *     allowed object is
     *     {@link String }
     *
     */
    public final void setSoundEffect(final String value) {
        this.soundEffect = value;
    }

    /**
     *
     * @return
     * {@link ElementColor}
     */
    public final ElementColor getColor() {
        return colors;
    }

    /**
     *
     * @param value
     * {@ElementColor}
     */
    public final void setColor(final ElementColor value) {
        this.colors = value;
    }

    /**
     * Returns a list of behaviors. If the list is null,
     * the list will be created. Per similar methods in this package,
     * there is no set method associated with this data item. Set items
     * with getBehaviors().add(value) or .addAll(list) if you want to
     * add all items in a list.
     * @return
     * {@link Behavior}
     */
    public final List<Behavior> getBehaviors() {
        if (behaviors == null) {
            behaviors = new ArrayList<Behavior>();
        }
        return behaviors;
    }

    /**
     * Gets the value of the rewards property.
     *
     * @return
     *     possible object is
     *     {@link Reward }
     *
     */
    public final Reward getRewards() {
        return rewards;
    }

    /**
     * Sets the value of the rewards property.
     *
     * @param value
     *     allowed object is
     *     {@link Reward }
     *
     */
    public final void setRewards(final Reward value) {
        this.rewards = value;
    }


}
